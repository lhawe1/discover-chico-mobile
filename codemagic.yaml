workflows:
  ios-workflow:
    name: iOS Workflow
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      vars:
        APP_STORE_CONNECT_ISSUER_ID: $APPLE_ISSUER_ID
        APP_STORE_CONNECT_KEY_IDENTIFIER: $APPLE_KEY_ID
        APP_STORE_CONNECT_PRIVATE_KEY: $APPLE_PRIVATE_KEY
        BUNDLE_IDENTIFIER: $BUNDLE_ID
        CERTIFICATE_PRIVATE_KEY: $IOS_DISTRIBUTION_CERTIFICATE
        CERTIFICATE_PASSWORD: $IOS_DISTRIBUTION_CERTIFICATE_PASSWORD
      node: 18.17.0
      xcode: latest
      cocoapods: default
      ios_signing:
        distribution_type: app_store
        bundle_identifier: $BUNDLE_ID
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: main
          include: true
          source: true
    scripts:
      - name: Install dependencies
        script: |
          npm ci
      - name: Install Expo CLI
        script: |
          npm install -g @expo/cli@latest
      - name: Prebuild
        script: |
          npx expo prebuild --platform ios --clean
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      - name: Initialize keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Set up iOS distribution certificate
        script: |
          echo $CERTIFICATE_PRIVATE_KEY | base64 --decode > /tmp/certificate.p12
          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CERTIFICATE_PASSWORD
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files $BUNDLE_IDENTIFIER --type IOS_APP_STORE --create
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Build ipa for distribution
        script: |
          cd ios
          xcode-project build-ipa \
            --workspace "DiscoverChico.xcworkspace" \
            --scheme "DiscoverChico"
      - name: Upload to TestFlight
        script: |
          app-store-connect publish \
            --path build/ios/ipa/*.ipa
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - user@example.com
        notify:
          success: true
          failure: true
